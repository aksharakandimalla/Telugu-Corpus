# s5_te_en.yaml

# data from himanshudce- 75000, sentences
# 
# Byte pair encoding-200,000 worde model
# glove embeddings- 300 dimensions
#
#
## Where the samples will be written
save_data: s5/run/example
## Where the vocab(s) will be written
src_vocab: s5/run/example.vocab.src
tgt_vocab: s5/run/example.vocab.tgt
# Prevent overwriting existing files in the folder
overwrite: False

# Tokenization options
src_subword_type: bpe
src_subword_model: s4/examples/te.wiki.bpe.vs200000.model
tgt_subword_type: bpe
tgt_subword_model: s4/examples/en.wiki.bpe.vs200000.model

# Number of candidates for SentencePiece sampling
subword_nbest: 20
# Smoothing parameter for SentencePiece sampling
subword_alpha: 0.1
# Specific arguments for pyonmttok
src_onmttok_kwargs: "{'mode': 'none', 'spacer_annotate': True}"
tgt_onmttok_kwargs: "{'mode': 'none', 'spacer_annotate': True}"

both_embeddings: glove_dir/glove_dir/glove.6B.300d.txt
embeddings_type: "GloVe"
word_vec_size: 100

# Corpus opts:
data:
    corpus_1:
        path_src: s5/train.te
        path_tgt: s5/train.en
        transforms: [onmt_tokenize]
    valid:
        path_src: s5/val.te
        path_tgt: s5/val.en
        transforms: [onmt_tokenize]

# Vocabulary files that were just created
src_vocab: s5/run/example.vocab.src
tgt_vocab: s5/run/example.vocab.tgt

# Train on a single GPU
world_size: 1
gpu_ranks: [0]


# Where to save the checkpoints
save_model: s5/run/model
save_checkpoint_steps: 1000
keep_checkpoint: 10
seed: 3435
train_steps: 10000
valid_steps: 1000
warmup_steps: 500
report_every: 500

decoder_type: transformer
encoder_type: transformer
word_vec_size: 512
rnn_size: 512
layers: 6
transformer_ff: 2048
heads: 8

accum_count: 8
optim: adam
adam_beta1: 0.9
adam_beta2: 0.998
decay_method: noam
learning_rate: 2.0
max_grad_norm: 0.0

batch_size: 4096
batch_type: tokens
normalization: tokens
dropout: 0.1
label_smoothing: 0.1

max_generator_batches: 2

param_init: 0.0
param_init_glorot: 'true'
position_encoding: 'true'
